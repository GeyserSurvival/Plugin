# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
    push:
        branches:
            - "main"
        paths:
            - "pom.xml"

jobs:
  validate-version:
    name: Validate Version
    runs-on: ubuntu-latest
    outputs:
      current_plugin_version: ${{ steps.lookupPluginVersion.outputs.result }}
      previous_plugin_version: ${{ steps.getPreviousTag.outputs.tag }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get previous tag
      id: getPreviousTag
      uses: actions-ecosystem/action-get-latest-tag@v1
    - name: Get Plugin Version from pom.xml
      id: lookupPluginVersion
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -p xml '.project | .["version"]' pom.xml
    - name: Validate Version
      env:
        PREVIOUS_VERSION: ${{ steps.getPreviousTag.outputs.tag }}
        CURRENT_VERSION: ${{ steps.lookupPluginVersion.outputs.result }}
      run: |
        PREV_VER_GEQ_CUR_VER=$(
          jq -r -n --arg previous_version "${PREVIOUS_VERSION}" --arg current_version "${CURRENT_VERSION}" '
          def ver2arr($inp): ($inp | split(".") | map(tonumber)); 
            ver2arr($previous_version) as $ver_prev  
          | ver2arr($current_version) as $ver_cur 
          | if ($ver_prev[0] > $ver_cur[0]) or ($ver_prev[1] > $ver_cur[1] and $ver_cur[1] != 0) or ($ver_prev[2] >= $ver_cur[2] and $ver_cur[2] != 0) then true else false end
        ')
        if [ "${PREV_VER_GEQ_CUR_VER}" = true ]; then
          echo "Previous version is greater than or equal to current version."
          echo "Please update pom.xml with a valid SemVer version greater than ${PREVIOUS_VERSION} to deploy!"
          exit 1
        fi
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: validate-version
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        custom_tag: ${{ needs.validate-version.outputs.current_plugin_version }}
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
        java-package: jdk
        architecture: x86
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PLUGIN_VERSION: ${{ needs.validate-version.outputs.current_plugin_version }}
      run: mvn clean package
    - run: mkdir staging && cp target/plugin-*.jar staging/SurvivalPlugin.jar
    - uses: actions/upload-artifact@v2
      with:
        name: SurvivalPlugin-Latest
        path: staging/SurvivalPlugin.jar
    - name: Generate release diff
      env:
        BEGIN_COMMIT: ${{ needs.validate-version.outputs.previous_plugin_version }}
        END_COMMIT: ${{ needs.validate-version.outputs.current_plugin_version }}
      run: git fetch --tags --force && git log --pretty=format:"* %s (%h)" ${BEGIN_COMMIT}..${END_COMMIT} > release_notes.md
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        artifacts: staging/SurvivalPlugin.jar
        allowUpdates: true
        bodyFile: "release_notes.md"
        draft: false
        prerelease: false
        tag: ${{ needs.validate-version.outputs.current_plugin_version }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload jar to server
      env:
        PTERODACTYL_TOKEN: ${{ secrets.PTERODACTYL_TOKEN }}
      run: |
        cp staging/SurvivalPlugin.jar SurvivalPlugin.jar
        upload_plugin () {
          local upload_url=$(curl "https://panel.paradisu.net/api/client/servers/${1}/files/upload" -H "Authorization: Bearer ${PTERODACTYL_TOKEN}" -X GET -s | jq -r .attributes.url)
          curl -F files=@SurvivalPlugin.jar "${upload_url}&directory=/plugins"
        }
        server_ids=(
          "eec39ff5"
        )
        for id in ${server_ids[@]}
        do
          upload_plugin ${id}
        done
